{#{ form_start(form) }}

    {{ form_label(form.employee_formation) }}
    {{ form_widget(form.employee_formation) }}

{{ form_end(form) }#}

<!doctype html>

<html lang="en">
<head>
    <meta charset="utf-8">

    <meta name="description" content="The HTML5 Herald">
    <meta name="author" content="SitePoint">

</head>



<body>

        {{ form_start(form) }}


            <ul id="formation-fields-list"
                data-prototype="{{ form_widget(form.employee_formation.vars.prototype)|e }}"
                data-widget-tags="{{ '<li class="formation"></li>'|e }}">
                {% for emailField in form.employee_formation %}
                    <li>
                        {{ form_errors(emailField) }}
                        {{ form_widget(emailField) }}
                    </li>
                {% endfor %}
            </ul>

            <a href="#"
               class="add-another-collection-widget"
               data-list="#formation-fields-list">Add another formation</a>
            <input type="submit" value="submit"/>
        {{ form_end(form) }}


        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script>
        jQuery(document).ready(function () {
            jQuery('.add-another-collection-widget').click(function (e) {
                e.preventDefault();

                var list = jQuery(jQuery(this).attr('data-list'));
                // Try to find the counter of the list
                var counter = list.data('widget-counter') | list.children().length;
                // If the counter does not exist, use the length of the list
                if (!counter) { counter = list.children().length; }

                // grab the prototype template
                var newWidget = list.attr('data-prototype');
                // replace the "__name__" used in the id and name of the prototype
                // with a number that's unique to your emails
                // end name attribute looks like name="contact[emails][2]"
                newWidget = newWidget.replace(/__name__/g, counter);
                // Increase the counter
                counter++;
                // And store it, the length cannot be used if deleting widgets is allowed
                list.data(' widget-counter', counter);

                // create a new list element and add it to the list
                var newElem = jQuery(list.attr('data-widget-tags')).html(newWidget);
                newElem.appendTo(list);

                // Get the ul that holds the collection of tags
                $collectionHolder = $('ul#formation-fields-list');

                // add a delete link to all of the existing tag form li elements
                $collectionHolder.find('.formation').each(function() {
                    if (!$(this).hasClass("dirty")) {
                        addTagFormDeleteLink($(this));
                    }
                });

                function addTagForm() {

                    // add a delete link to the new form
                    addTagFormDeleteLink($newFormLi);
                }
            });

            function addTagFormDeleteLink($tagFormLi) {
                var $removeFormA = $('<a href="#">X</a>');
                $tagFormLi.append($removeFormA)
                $tagFormLi.addClass("dirty");
                $removeFormA.on('click', function(e) {
                    // prevent the link from creating a "#" on the URL
                    e.preventDefault();

                    // remove the li for the tag form
                    $tagFormLi.remove();
                });
            }

        });

    </script>

</body>
</html>